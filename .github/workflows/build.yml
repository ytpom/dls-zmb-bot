name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Run tests (–µ—Å–ª–∏ –µ—Å—Ç—å)
      run: |
        if (Test-Path "pytest.ini") -or (Test-Path "setup.cfg") -or (Test-Path "tests") {
          pip install pytest
          pytest
        }
      shell: powershell
      continue-on-error: true

    - name: Build executable with PyInstaller
      run: |
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º zmb.py –∫–∞–∫ –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
        $MAIN_FILE = "zmb.py"
        
        if (-not (Test-Path $MAIN_FILE)) {
          Write-Host "–§–∞–π–ª zmb.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
          exit 1
        }
        
        Write-Host "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–∞–π–ª: $MAIN_FILE"
        
        # –°–æ–∑–¥–∞—Ç—å –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª —Å –≤–∫–ª—é—á–µ–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        pyinstaller --onefile `
                   --name "dls-zmb-bot.exe" `
                   --distpath dist `
                   --workpath build `
                   --specpath . `
                   --add-data "*.png;." `
                   --console `
                   --icon=icon.ico `
                   $MAIN_FILE
      shell: powershell

    - name: List dist directory
      run: Get-ChildItem -Path dist\ -Force
      shell: powershell

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dls-zmb-bot-windows-python${{ matrix.python-version }}
        path: dist/
        retention-days: 90

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts/

    - name: Display structure of downloaded files
      run: ls -R artifacts/

    - name: Prepare release assets
      run: |
        New-Item -ItemType Directory -Force -Path release-assets
        
        # –ù–∞–π—Ç–∏ –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å exe —Ñ–∞–π–ª –¥–ª—è —Ä–µ–ª–∏–∑–∞
        $exeFile = Get-ChildItem -Path artifacts\ -Filter "*.exe" -Recurse | Select-Object -First 1
        if ($exeFile) {
          Copy-Item $exeFile.FullName "release-assets\dls-zmb-bot.exe"
        }
        
        Get-ChildItem -Path release-assets\ -Force
      shell: powershell

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑ dls-zmb-bot –¥–ª—è Windows
          
          ### üì• –°–∫–∞—á–∞—Ç—å:
          - **Windows**: `dls-zmb-bot.exe`
          
          ### üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫:
          
          1. –°–∫–∞—á–∞–π—Ç–µ `dls-zmb-bot.exe`
          2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–≤–æ–π–Ω—ã–º –∫–ª–∏–∫–æ–º –∏–ª–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
          3. –û—Ç–∫—Ä–æ–π—Ç–µ –∏–≥—Ä—É –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
          4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏—à—É **P** –¥–ª—è –ø–∞—É–∑—ã/–≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          
          ### ‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
          - Windows 10/11
          - –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ 1920x1080 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
          - –ò–≥—Ä–∞ –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
          
          ### üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:
          - **P** - –ü–∞—É–∑–∞/–í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
          - **Ctrl+C** - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
          
          ---
          *–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–±—Ä–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é GitHub Actions*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}