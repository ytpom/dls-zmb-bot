name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  # –°–±–æ—Ä–∫–∞ –≤—Å–µ–≥–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install pyinstaller pyautogui keyboard pillow opencv-python numpy

    - name: Build executable
      run: |
        Write-Host "Building executable..."
        $pngFiles = Get-ChildItem -Path "*.png" -ErrorAction SilentlyContinue
        if ($pngFiles) {
          Write-Host "Found $($pngFiles.Count) PNG files"
          $addData = @()
          foreach ($file in $pngFiles) {
            $addData += "--add-data"
            $addData += "$($file.Name);."
          }
          pyinstaller --onefile --console --name "dls-zmb-bot" @addData "zmb.py"
        } else {
          Write-Host "No PNG files found"
          pyinstaller --onefile --console --name "dls-zmb-bot" "zmb.py"
        }
        
        if (Test-Path "dist\dls-zmb-bot.exe") {
          $fileInfo = Get-Item "dist\dls-zmb-bot.exe"
          Write-Host "Build successful!"
          Write-Host "File size: $([math]::Round($fileInfo.Length / 1MB, 2)) MB"
        } else {
          Write-Host "Build failed"
          exit 1
        }
      shell: powershell

    - name: Upload build artifacts (always)
      uses: actions/upload-artifact@v4
      with:
        name: dls-zmb-bot-${{ github.run_number }}
        path: dist/dls-zmb-bot.exe
        retention-days: 90

  # –†–µ–ª–∏–∑ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–≥–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ job
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: dls-zmb-bot-${{ github.run_number }}
        path: ./

    - name: Verify downloaded file
      run: |
        ls -la
        if [ -f "dls-zmb-bot.exe" ]; then
          echo "File found: dls-zmb-bot.exe"
          echo "Size: $(du -h dls-zmb-bot.exe | cut -f1)"
          file dls-zmb-bot.exe
        else
          echo "File not found!"
          exit 1
        fi

    - name: Create Release (Linux environment)
      uses: softprops/action-gh-release@v1
      with:
        files: dls-zmb-bot.exe
        name: "DLS Zombie Bot ${{ github.ref_name }}"
        body: |
          ## üßü‚Äç‚ôÇÔ∏è DLS Zombie Bot ${{ github.ref_name }}
          
          ### üì• Download:
          - **Windows**: `dls-zmb-bot.exe`
          
          ### üöÄ Quick Start:
          1. Download `dls-zmb-bot.exe`
          2. Run the executable
          3. Open Doomsday: Last Survivors in fullscreen mode
          4. The bot will automatically start hunting zombies
          
          ### üéÆ Controls:
          - **P** - Pause/Resume bot
          - **Ctrl+C** - Stop bot
          
          ### ‚öôÔ∏è System Requirements:
          - Windows 10/11
          - Screen resolution 1920x1080 (recommended)
          - Game in fullscreen mode
          
          ### üîß Features:
          - Automatic camp search and zombie selection
          - Adaptive level switching when no targets found
          - Automatic use of boosts and items
          - Auto-close popups and ads
          
          ---
          *ü§ñ Built automatically with GitHub Actions*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
